

/*QUERY #1*/
SELECT USERID, OCCUPATION
FROM VIEWER
WHERE AGE > 21

/*QUERY #2*/
SELECT MovieTitle as 'Action File', action, adventure 
FROM MOVIE
WHERE action = 1 and adventure = 0 

/*QUERY #3*/
SELECT USERID 
FROM VIEWER 
WHERE (GENDER ='F' OR AGE > 28) AND OCCUPATION = 'administrator';

/*QUERY #4*/
SELECT OCCUPATION, COUNT(USERID) AS 'Jobs in Stem'
FROM VIEWER 
WHERE OCCUPATION IN ('Engineer', 'Scientist', 'Programmer')
GROUP BY OCCUPATION 
ORDER BY OCCUPATION ASC

/*QUERY #5*/
SELECT SUBSTRING(MOVIETITLE, (Patindex('%([1-9][0-9][0-9][0-9])%', movietitle)+1), 4) AS 'Release Year', COUNT(*) AS 'Movies Released'
FROM movie
GROUP BY SUBSTRING(MOVIETITLE, (Patindex('%([1-9][0-9][0-9][0-9])%', movietitle)+1), 4)
ORDER BY COUNT(*) DESC

/*QUERY #6*/
SELECT USERID, AVG(RATING)
FROM RATING
GROUP BY USERID
HAVING AVG(RATING)=3;

/*QUERY #7*/
SELECT OCCUPATION 'Profession', MIN(age) 'Youngest', MAX(age) 'Oldest', AVG(age)'Average Age'
From VIEWER
LEFT JOIN RATING ON VIEWER.USERID=RATING.USERID
LEFT JOIN MOVIE ON RATING.MOVIEID=MOVIE.MOVIEID
WHERE RATING=1 and ACTION = 1
GROUP BY OCCUPATION 
ORDER BY OCCUPATION ASC

/*QUERY #8*/
SELECT OCCUPATION, COUNT(*)
FROM VIEWER
WHERE OCCUPATION NOT IN ('scientist', 'engineer', 'programmer')
GROUP BY OCCUPATION 
ORDER BY COUNT(*) DESC

/*QUERY #9*/
SELECT OCCUPATION, AVG(age) 'Average Age', AVG(rating) 'Average Rating', COUNT(rating) 'Number of Rating'
FROM VIEWER 
Left Join RATING ON RATING.USERID = VIEWER.USERID
Left Join MOVIE ON RATING.MOVIEID = MOVIE.MOVIEID
WHERE OCCUPATION in ('student', 'educator') AND MOVIETITLE LIKE '%(1986)'
GROUP BY VIEWER.OCCUPATION

/*QUERY #10*/
SELECT OCCUPATION,
AVG(CAST(Age as decimal(6,3))) as "ave_avg"
from viewer
WHERE ZIP like '%100%' and len(zip)=5
GROUP BY OCCUPATION
FOR XML AUTO, root('Kerim')